buildscript {
    repositories {
        mavenLocal()
        maven { url "https://nexus.ala.org.au/content/groups/public/" }
        maven { url "https://repo.grails.org/grails/core" }
    }
    dependencies {
        classpath "org.grails:grails-gradle-plugin:$grailsVersion"
        classpath "com.bertramlabs.plugins:asset-pipeline-gradle:2.14.2"
        classpath "org.grails.plugins:hibernate5:${gormVersion-".RELEASE"}"
    }
}

plugins {
    id "com.gorylenko.gradle-git-properties" version "1.4.17"
}

version "3.0.13-SNAPSHOT"
group "au.org.ala"

apply plugin:"eclipse"
apply plugin:"idea"
apply plugin:"war"
apply plugin:"org.grails.grails-web"
apply plugin:"org.grails.grails-gsp"
apply plugin:"asset-pipeline"

apply from: 'https://raw.githubusercontent.com/AtlasOfLivingAustralia/travis-build-configuration/master/travis_grails_publish.gradle'

sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
    mavenLocal()
    maven { url "https://nexus.ala.org.au/content/groups/public/" }
    maven { url "https://repo.grails.org/grails/core" }
}

configurations.all {
    resolutionStrategy.cacheChangingModulesFor 1, 'minutes'
}

bootRepackage {
    enabled = false
}



// Inplace plugin config

// Set to true it needed only for development
boolean inplace = false

if (inplace) {
    grails {
        exploded = true
        plugins {
            compile project(':biocache-hubs')
            compile project(':downloads-plugin')
            // When not inplace used, the pependencies below are managed by biocache-hubs plugin
//            compile project(':ala-charts-plugin')
//            compile project(':images-client-plugin')
//            compile project(':ala-bootstrap3')
//            runtime project(':ala-ws-plugin')
        }
    }
}

dependencies {

    def noCache = {
        exclude group: 'org.grails.plugins', module: 'cache'
        exclude group: 'org.ehcache', module: 'ehcache'
    }

    compile "org.springframework.boot:spring-boot-starter-logging"
    compile "org.springframework.boot:spring-boot-autoconfigure"
    compile "org.grails:grails-core"
    compile "org.springframework.boot:spring-boot-starter-actuator"
    provided "org.springframework.boot:spring-boot-starter-tomcat"
    compile "org.grails:grails-dependencies", noCache
    compile "org.grails:grails-web-boot"
    compile "org.grails.plugins:cache"
    compile "org.grails.plugins:scaffolding"
    compile "org.grails.plugins:hibernate5"
    compile "org.hibernate:hibernate-core:5.1.3.Final"
    console "org.grails:grails-console"
    profile "org.grails.profiles:web"
    runtime "com.bertramlabs.plugins:asset-pipeline-grails:2.14.2"
    runtime "com.h2database:h2"
    testCompile "org.grails:grails-plugin-testing"
    testCompile "org.grails.plugins:geb"
    testRuntime "org.seleniumhq.selenium:selenium-htmlunit-driver:2.47.1"
    testRuntime "net.sourceforge.htmlunit:htmlunit:2.18"

    // Jars
    compile "org.apache.httpcomponents:httpclient:4.5.6"
    compile 'xml-apis:xml-apis:1.4.01' // really?

    // Plugins
    compile 'org.grails.plugins:external-config:1.1.1'
    compile "org.grails.plugins:ala-auth:3.1.0", noCache

    if(!inplace) {
        runtime "au.org.ala.plugins.grails:biocache-hubs:2.0.10-SNAPSHOT", noCache
        runtime "au.org.ala.plugins.grails:downloads-plugin:2.0.6", noCache
    }

    runtime "org.grails.plugins:ala-bootstrap3:3.0.6", noCache
}

bootRun {
    jvmArgs('-Dspring.output.ansi.enabled=always')
    addResources = true
}


assets {
    minifyJs = true
    minifyCss = true
}
